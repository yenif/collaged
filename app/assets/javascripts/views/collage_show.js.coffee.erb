class window.CollageShow extends Backbone.View
  tagName: "div"
  className: "collage-show"
  events: {
    'click #uploadfiles': 'start_upload'
  }

  initialize: ->
    @model.bind('change', this.render, this)
    @model.view = this

    @uploader = new plupload.Uploader({
      runtimes : 'gears,html5,flash,silverlight,browserplus',
      browse_button : 'pickfiles',
      drop_element : 'content',
      container : 'toolbox',
      max_file_size : '100mb',
      url : this.model.photos().url,
      file_data_name: 'photo[image]',
      multipart : true,
      multipart_params : {},
      headers : {
        Accept : 'application/json',
        'X-CSRF-Token' : $('meta[name="csrf-token"]').attr('content')
      },
      flash_swf_url : '/plupload.flash.swf',
      silverlight_xap_url : '/plupload.silverlight.xap',
      filters : [
        {title : "Image files", extensions : "jpg,gif,png"},
      ]
    })

    @uploader.bind('Init', (up, params) =>
      $('#filelist').html("<div>Current runtime: " + params.runtime + "</div>")
    )

    if @model.photos().length == 0
      @model.photos().fetch()

  start_upload: (e) =>
    @uploader.start()
    e.preventDefault()

  render: =>
    $(this.el).html(_.template(<%= Templater.render_template :collage_show %>,this.model.toJSON()))
    @photos ?= (new CollagePhotosView({collection:this.model.photos(), el:$('div#collage_photos')})).render()

    @uploader.init()

    @uploader.bind('FilesAdded', (up, files) =>
      $.each(files, (i, file) =>
        $('#filelist').append('<div id="' + file.id + '">' + file.name + ' (' + plupload.formatSize(file.size) + ') <b></b>' + '</div>')
      )

      up.refresh() # Reposition Flash/Silverlight
      up.start()
    )

    @uploader.bind('UploadProgress', (up, file) =>
      $('#' + file.id + " b").html(file.percent + "%")
    )

    @uploader.bind('Error', (up, err) =>
      $('#filelist').append("<div>Error: " + err.code + ", Message: " + err.message + (if err.file then ", File: " + err.file.name else "") + "</div>")

      up.refresh() # Reposition Flash/Silverlight
    )

    @uploader.bind('FileUploaded', (up, file,response) =>
      this.model.photos().add($.parseJSON(response.response))
      $('#' + file.id + " b").html("100%")
    )
